@model CrudOperations.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


<div id="loadingimg" style="display:none">
    <img src="~/Images/loading.gif" height="30" width="30" />
</div>



@using (Ajax.BeginForm("Create", "Product", new AjaxOptions()
{
    HttpMethod = "Post",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "DivUpdate",
    OnComplete = "ClearFields",
    LoadingElementId = "loadingimg",
    LoadingElementDuration = 500    
},new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductGenericName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductGenericName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } }) <span id="ProductGenericNameHelpdiv"></span>
                @Html.ValidationMessageFor(model => model.ProductGenericName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } }) <span id="ProductDescriptionHelpdiv"></span>
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control", autocomplete = "off"} }) <span id="ProductTitleHelpdiv"></span>
                @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductWeight, new { htmlAttributes = new { @class = "form-control" } })<span id="ProductWeightHelpdiv"></span>
                @Html.ValidationMessageFor(model => model.ProductWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })<span id="ProductPriceHelpdiv"></span>
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.UserID,new { Value = Convert.ToInt32(Session["userid"])})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" required class="form-control" id="ImageFile" />
            </div>
            <div id="DivUpdate">

            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


